#include "Math.hh"

#include <cmath>

namespace EGG::Mathf {

// sin/cos struct
struct SinCosEntry {
    f32 sinVal, cosVal, sinDt, cosDt;
};

// atan struct
struct AtanEntry {
    f32 atanVal, atanDt;
};

/// @addr{0x80248010}
static constexpr SinCosEntry sSinCosTbl[256 + 1] = {
        {0.000000f, 1.000000f, 0.024541f, -0.000301f},
        {0.024541f, 0.999699f, 0.024526f, -0.000903f},
        {0.049068f, 0.998795f, 0.024497f, -0.001505f},
        {0.073565f, 0.997290f, 0.024453f, -0.002106f},
        {0.098017f, 0.995185f, 0.024394f, -0.002705f},
        {0.122411f, 0.992480f, 0.024320f, -0.003303f},
        {0.146730f, 0.989177f, 0.024231f, -0.003899f},
        {0.170962f, 0.985278f, 0.024128f, -0.004492f},
        {0.195090f, 0.980785f, 0.024011f, -0.005083f},
        {0.219101f, 0.975702f, 0.023879f, -0.005671f},
        {0.242980f, 0.970031f, 0.023733f, -0.006255f},
        {0.266713f, 0.963776f, 0.023572f, -0.006836f},
        {0.290285f, 0.956940f, 0.023397f, -0.007412f},
        {0.313682f, 0.949528f, 0.023208f, -0.007984f},
        {0.336890f, 0.941544f, 0.023005f, -0.008551f},
        {0.359895f, 0.932993f, 0.022788f, -0.009113f},
        {0.382683f, 0.923880f, 0.022558f, -0.009670f},
        {0.405241f, 0.914210f, 0.022314f, -0.010220f},
        {0.427555f, 0.903989f, 0.022056f, -0.010765f},
        {0.449611f, 0.893224f, 0.021785f, -0.011303f},
        {0.471397f, 0.881921f, 0.021501f, -0.011834f},
        {0.492898f, 0.870087f, 0.021205f, -0.012358f},
        {0.514103f, 0.857729f, 0.020895f, -0.012875f},
        {0.534998f, 0.844854f, 0.020573f, -0.013384f},
        {0.555570f, 0.831470f, 0.020238f, -0.013885f},
        {0.575808f, 0.817585f, 0.019891f, -0.014377f},
        {0.595699f, 0.803208f, 0.019532f, -0.014861f},
        {0.615232f, 0.788346f, 0.019162f, -0.015336f},
        {0.634393f, 0.773010f, 0.018780f, -0.015802f},
        {0.653173f, 0.757209f, 0.018386f, -0.016258f},
        {0.671559f, 0.740951f, 0.017982f, -0.016704f},
        {0.689541f, 0.724247f, 0.017566f, -0.017140f},
        {0.707107f, 0.707107f, 0.017140f, -0.017566f},
        {0.724247f, 0.689541f, 0.016704f, -0.017982f},
        {0.740951f, 0.671559f, 0.016258f, -0.018386f},
        {0.757209f, 0.653173f, 0.015802f, -0.018780f},
        {0.773010f, 0.634393f, 0.015336f, -0.019162f},
        {0.788346f, 0.615232f, 0.014861f, -0.019532f},
        {0.803208f, 0.595699f, 0.014377f, -0.019891f},
        {0.817585f, 0.575808f, 0.013885f, -0.020238f},
        {0.831470f, 0.555570f, 0.013384f, -0.020573f},
        {0.844854f, 0.534998f, 0.012875f, -0.020895f},
        {0.857729f, 0.514103f, 0.012358f, -0.021205f},
        {0.870087f, 0.492898f, 0.011834f, -0.021501f},
        {0.881921f, 0.471397f, 0.011303f, -0.021785f},
        {0.893224f, 0.449611f, 0.010765f, -0.022056f},
        {0.903989f, 0.427555f, 0.010220f, -0.022314f},
        {0.914210f, 0.405241f, 0.009670f, -0.022558f},
        {0.923880f, 0.382683f, 0.009113f, -0.022788f},
        {0.932993f, 0.359895f, 0.008551f, -0.023005f},
        {0.941544f, 0.336890f, 0.007984f, -0.023208f},
        {0.949528f, 0.313682f, 0.007412f, -0.023397f},
        {0.956940f, 0.290285f, 0.006836f, -0.023572f},
        {0.963776f, 0.266713f, 0.006255f, -0.023733f},
        {0.970031f, 0.242980f, 0.005671f, -0.023879f},
        {0.975702f, 0.219101f, 0.005083f, -0.024011f},
        {0.980785f, 0.195090f, 0.004492f, -0.024128f},
        {0.985278f, 0.170962f, 0.003899f, -0.024231f},
        {0.989177f, 0.146730f, 0.003303f, -0.024320f},
        {0.992480f, 0.122411f, 0.002705f, -0.024394f},
        {0.995185f, 0.098017f, 0.002106f, -0.024453f},
        {0.997290f, 0.073565f, 0.001505f, -0.024497f},
        {0.998795f, 0.049068f, 0.000903f, -0.024526f},
        {0.999699f, 0.024541f, 0.000301f, -0.024541f},
        {1.000000f, 0.000000f, -0.000301f, -0.024541f},
        {0.999699f, -0.024541f, -0.000903f, -0.024526f},
        {0.998795f, -0.049068f, -0.001505f, -0.024497f},
        {0.997290f, -0.073565f, -0.002106f, -0.024453f},
        {0.995185f, -0.098017f, -0.002705f, -0.024394f},
        {0.992480f, -0.122411f, -0.003303f, -0.024320f},
        {0.989177f, -0.146730f, -0.003899f, -0.024231f},
        {0.985278f, -0.170962f, -0.004492f, -0.024128f},
        {0.980785f, -0.195090f, -0.005083f, -0.024011f},
        {0.975702f, -0.219101f, -0.005671f, -0.023879f},
        {0.970031f, -0.242980f, -0.006255f, -0.023733f},
        {0.963776f, -0.266713f, -0.006836f, -0.023572f},
        {0.956940f, -0.290285f, -0.007412f, -0.023397f},
        {0.949528f, -0.313682f, -0.007984f, -0.023208f},
        {0.941544f, -0.336890f, -0.008551f, -0.023005f},
        {0.932993f, -0.359895f, -0.009113f, -0.022788f},
        {0.923880f, -0.382683f, -0.009670f, -0.022558f},
        {0.914210f, -0.405241f, -0.010220f, -0.022314f},
        {0.903989f, -0.427555f, -0.010765f, -0.022056f},
        {0.893224f, -0.449611f, -0.011303f, -0.021785f},
        {0.881921f, -0.471397f, -0.011834f, -0.021501f},
        {0.870087f, -0.492898f, -0.012358f, -0.021205f},
        {0.857729f, -0.514103f, -0.012875f, -0.020895f},
        {0.844854f, -0.534998f, -0.013384f, -0.020573f},
        {0.831470f, -0.555570f, -0.013885f, -0.020238f},
        {0.817585f, -0.575808f, -0.014377f, -0.019891f},
        {0.803208f, -0.595699f, -0.014861f, -0.019532f},
        {0.788346f, -0.615232f, -0.015336f, -0.019162f},
        {0.773010f, -0.634393f, -0.015802f, -0.018780f},
        {0.757209f, -0.653173f, -0.016258f, -0.018386f},
        {0.740951f, -0.671559f, -0.016704f, -0.017982f},
        {0.724247f, -0.689541f, -0.017140f, -0.017566f},
        {0.707107f, -0.707107f, -0.017566f, -0.017140f},
        {0.689541f, -0.724247f, -0.017982f, -0.016704f},
        {0.671559f, -0.740951f, -0.018386f, -0.016258f},
        {0.653173f, -0.757209f, -0.018780f, -0.015802f},
        {0.634393f, -0.773010f, -0.019162f, -0.015336f},
        {0.615232f, -0.788346f, -0.019532f, -0.014861f},
        {0.595699f, -0.803208f, -0.019891f, -0.014377f},
        {0.575808f, -0.817585f, -0.020238f, -0.013885f},
        {0.555570f, -0.831470f, -0.020573f, -0.013384f},
        {0.534998f, -0.844854f, -0.020895f, -0.012875f},
        {0.514103f, -0.857729f, -0.021205f, -0.012358f},
        {0.492898f, -0.870087f, -0.021501f, -0.011834f},
        {0.471397f, -0.881921f, -0.021785f, -0.011303f},
        {0.449611f, -0.893224f, -0.022056f, -0.010765f},
        {0.427555f, -0.903989f, -0.022314f, -0.010220f},
        {0.405241f, -0.914210f, -0.022558f, -0.009670f},
        {0.382683f, -0.923880f, -0.022788f, -0.009113f},
        {0.359895f, -0.932993f, -0.023005f, -0.008551f},
        {0.336890f, -0.941544f, -0.023208f, -0.007984f},
        {0.313682f, -0.949528f, -0.023397f, -0.007412f},
        {0.290285f, -0.956940f, -0.023572f, -0.006836f},
        {0.266713f, -0.963776f, -0.023733f, -0.006255f},
        {0.242980f, -0.970031f, -0.023879f, -0.005671f},
        {0.219101f, -0.975702f, -0.024011f, -0.005083f},
        {0.195090f, -0.980785f, -0.024128f, -0.004492f},
        {0.170962f, -0.985278f, -0.024231f, -0.003899f},
        {0.146730f, -0.989177f, -0.024320f, -0.003303f},
        {0.122411f, -0.992480f, -0.024394f, -0.002705f},
        {0.098017f, -0.995185f, -0.024453f, -0.002106f},
        {0.073565f, -0.997290f, -0.024497f, -0.001505f},
        {0.049068f, -0.998795f, -0.024526f, -0.000903f},
        {0.024541f, -0.999699f, -0.024541f, -0.000301f},
        {0.000000f, -1.000000f, -0.024541f, 0.000301f},
        {-0.024541f, -0.999699f, -0.024526f, 0.000903f},
        {-0.049068f, -0.998795f, -0.024497f, 0.001505f},
        {-0.073565f, -0.997290f, -0.024453f, 0.002106f},
        {-0.098017f, -0.995185f, -0.024394f, 0.002705f},
        {-0.122411f, -0.992480f, -0.024320f, 0.003303f},
        {-0.146730f, -0.989177f, -0.024231f, 0.003899f},
        {-0.170962f, -0.985278f, -0.024128f, 0.004492f},
        {-0.195090f, -0.980785f, -0.024011f, 0.005083f},
        {-0.219101f, -0.975702f, -0.023879f, 0.005671f},
        {-0.242980f, -0.970031f, -0.023733f, 0.006255f},
        {-0.266713f, -0.963776f, -0.023572f, 0.006836f},
        {-0.290285f, -0.956940f, -0.023397f, 0.007412f},
        {-0.313682f, -0.949528f, -0.023208f, 0.007984f},
        {-0.336890f, -0.941544f, -0.023005f, 0.008551f},
        {-0.359895f, -0.932993f, -0.022788f, 0.009113f},
        {-0.382683f, -0.923880f, -0.022558f, 0.009670f},
        {-0.405241f, -0.914210f, -0.022314f, 0.010220f},
        {-0.427555f, -0.903989f, -0.022056f, 0.010765f},
        {-0.449611f, -0.893224f, -0.021785f, 0.011303f},
        {-0.471397f, -0.881921f, -0.021501f, 0.011834f},
        {-0.492898f, -0.870087f, -0.021205f, 0.012358f},
        {-0.514103f, -0.857729f, -0.020895f, 0.012875f},
        {-0.534998f, -0.844854f, -0.020573f, 0.013384f},
        {-0.555570f, -0.831470f, -0.020238f, 0.013885f},
        {-0.575808f, -0.817585f, -0.019891f, 0.014377f},
        {-0.595699f, -0.803208f, -0.019532f, 0.014861f},
        {-0.615232f, -0.788346f, -0.019162f, 0.015336f},
        {-0.634393f, -0.773010f, -0.018780f, 0.015802f},
        {-0.653173f, -0.757209f, -0.018386f, 0.016258f},
        {-0.671559f, -0.740951f, -0.017982f, 0.016704f},
        {-0.689541f, -0.724247f, -0.017566f, 0.017140f},
        {-0.707107f, -0.707107f, -0.017140f, 0.017566f},
        {-0.724247f, -0.689541f, -0.016704f, 0.017982f},
        {-0.740951f, -0.671559f, -0.016258f, 0.018386f},
        {-0.757209f, -0.653173f, -0.015802f, 0.018780f},
        {-0.773010f, -0.634393f, -0.015336f, 0.019162f},
        {-0.788346f, -0.615232f, -0.014861f, 0.019532f},
        {-0.803208f, -0.595699f, -0.014377f, 0.019891f},
        {-0.817585f, -0.575808f, -0.013885f, 0.020238f},
        {-0.831470f, -0.555570f, -0.013384f, 0.020573f},
        {-0.844854f, -0.534998f, -0.012875f, 0.020895f},
        {-0.857729f, -0.514103f, -0.012358f, 0.021205f},
        {-0.870087f, -0.492898f, -0.011834f, 0.021501f},
        {-0.881921f, -0.471397f, -0.011303f, 0.021785f},
        {-0.893224f, -0.449611f, -0.010765f, 0.022056f},
        {-0.903989f, -0.427555f, -0.010220f, 0.022314f},
        {-0.914210f, -0.405241f, -0.009670f, 0.022558f},
        {-0.923880f, -0.382683f, -0.009113f, 0.022788f},
        {-0.932993f, -0.359895f, -0.008551f, 0.023005f},
        {-0.941544f, -0.336890f, -0.007984f, 0.023208f},
        {-0.949528f, -0.313682f, -0.007412f, 0.023397f},
        {-0.956940f, -0.290285f, -0.006836f, 0.023572f},
        {-0.963776f, -0.266713f, -0.006255f, 0.023733f},
        {-0.970031f, -0.242980f, -0.005671f, 0.023879f},
        {-0.975702f, -0.219101f, -0.005083f, 0.024011f},
        {-0.980785f, -0.195090f, -0.004492f, 0.024128f},
        {-0.985278f, -0.170962f, -0.003899f, 0.024231f},
        {-0.989177f, -0.146730f, -0.003303f, 0.024320f},
        {-0.992480f, -0.122411f, -0.002705f, 0.024394f},
        {-0.995185f, -0.098017f, -0.002106f, 0.024453f},
        {-0.997290f, -0.073565f, -0.001505f, 0.024497f},
        {-0.998795f, -0.049068f, -0.000903f, 0.024526f},
        {-0.999699f, -0.024541f, -0.000301f, 0.024541f},
        {-1.000000f, -0.000000f, 0.000301f, 0.024541f},
        {-0.999699f, 0.024541f, 0.000903f, 0.024526f},
        {-0.998795f, 0.049068f, 0.001505f, 0.024497f},
        {-0.997290f, 0.073565f, 0.002106f, 0.024453f},
        {-0.995185f, 0.098017f, 0.002705f, 0.024394f},
        {-0.992480f, 0.122411f, 0.003303f, 0.024320f},
        {-0.989177f, 0.146730f, 0.003899f, 0.024231f},
        {-0.985278f, 0.170962f, 0.004492f, 0.024128f},
        {-0.980785f, 0.195090f, 0.005083f, 0.024011f},
        {-0.975702f, 0.219101f, 0.005671f, 0.023879f},
        {-0.970031f, 0.242980f, 0.006255f, 0.023733f},
        {-0.963776f, 0.266713f, 0.006836f, 0.023572f},
        {-0.956940f, 0.290285f, 0.007412f, 0.023397f},
        {-0.949528f, 0.313682f, 0.007984f, 0.023208f},
        {-0.941544f, 0.336890f, 0.008551f, 0.023005f},
        {-0.932993f, 0.359895f, 0.009113f, 0.022788f},
        {-0.923880f, 0.382683f, 0.009670f, 0.022558f},
        {-0.914210f, 0.405241f, 0.010220f, 0.022314f},
        {-0.903989f, 0.427555f, 0.010765f, 0.022056f},
        {-0.893224f, 0.449611f, 0.011303f, 0.021785f},
        {-0.881921f, 0.471397f, 0.011834f, 0.021501f},
        {-0.870087f, 0.492898f, 0.012358f, 0.021205f},
        {-0.857729f, 0.514103f, 0.012875f, 0.020895f},
        {-0.844854f, 0.534998f, 0.013384f, 0.020573f},
        {-0.831470f, 0.555570f, 0.013885f, 0.020238f},
        {-0.817585f, 0.575808f, 0.014377f, 0.019891f},
        {-0.803208f, 0.595699f, 0.014861f, 0.019532f},
        {-0.788346f, 0.615232f, 0.015336f, 0.019162f},
        {-0.773010f, 0.634393f, 0.015802f, 0.018780f},
        {-0.757209f, 0.653173f, 0.016258f, 0.018386f},
        {-0.740951f, 0.671559f, 0.016704f, 0.017982f},
        {-0.724247f, 0.689541f, 0.017140f, 0.017566f},
        {-0.707107f, 0.707107f, 0.017566f, 0.017140f},
        {-0.689541f, 0.724247f, 0.017982f, 0.016704f},
        {-0.671559f, 0.740951f, 0.018386f, 0.016258f},
        {-0.653173f, 0.757209f, 0.018780f, 0.015802f},
        {-0.634393f, 0.773010f, 0.019162f, 0.015336f},
        {-0.615232f, 0.788346f, 0.019532f, 0.014861f},
        {-0.595699f, 0.803208f, 0.019891f, 0.014377f},
        {-0.575808f, 0.817585f, 0.020238f, 0.013885f},
        {-0.555570f, 0.831470f, 0.020573f, 0.013384f},
        {-0.534998f, 0.844854f, 0.020895f, 0.012875f},
        {-0.514103f, 0.857729f, 0.021205f, 0.012358f},
        {-0.492898f, 0.870087f, 0.021501f, 0.011834f},
        {-0.471397f, 0.881921f, 0.021785f, 0.011303f},
        {-0.449611f, 0.893224f, 0.022056f, 0.010765f},
        {-0.427555f, 0.903989f, 0.022314f, 0.010220f},
        {-0.405241f, 0.914210f, 0.022558f, 0.009670f},
        {-0.382683f, 0.923880f, 0.022788f, 0.009113f},
        {-0.359895f, 0.932993f, 0.023005f, 0.008551f},
        {-0.336890f, 0.941544f, 0.023208f, 0.007984f},
        {-0.313682f, 0.949528f, 0.023397f, 0.007412f},
        {-0.290285f, 0.956940f, 0.023572f, 0.006836f},
        {-0.266713f, 0.963776f, 0.023733f, 0.006255f},
        {-0.242980f, 0.970031f, 0.023879f, 0.005671f},
        {-0.219101f, 0.975702f, 0.024011f, 0.005083f},
        {-0.195090f, 0.980785f, 0.024128f, 0.004492f},
        {-0.170962f, 0.985278f, 0.024231f, 0.003899f},
        {-0.146730f, 0.989177f, 0.024320f, 0.003303f},
        {-0.122411f, 0.992480f, 0.024394f, 0.002705f},
        {-0.098017f, 0.995185f, 0.024453f, 0.002106f},
        {-0.073565f, 0.997290f, 0.024497f, 0.001505f},
        {-0.049068f, 0.998795f, 0.024526f, 0.000903f},
        {-0.024541f, 0.999699f, 0.024541f, 0.000301f},
        {-0.000000f, 1.000000f, 0.024541f, -0.000301f},
};

/// @addr{0x80274148}
static constexpr AtanEntry sArcTanTbl[32 + 1] = {
        {0.000000000f, 1.272825321f},
        {1.272825321f, 1.270345790f},
        {2.543171111f, 1.265415586f},
        {3.808586697f, 1.258091595f},
        {5.066678293f, 1.248457103f},
        {6.315135396f, 1.236619467f},
        {7.551754863f, 1.222707202f},
        {8.774462065f, 1.206866624f},
        {9.981328688f, 1.189258212f},
        {11.170586901f, 1.170052841f},
        {12.340639741f, 1.149428034f},
        {13.490067775f, 1.127564381f},
        {14.617632156f, 1.104642222f},
        {15.722274378f, 1.080838675f},
        {16.803113053f, 1.056325088f},
        {17.859438141f, 1.031264918f},
        {18.890703059f, 1.005812061f},
        {19.896515121f, 0.980109621f},
        {20.876624742f, 0.954289072f},
        {21.830913814f, 0.928469801f},
        {22.759383615f, 0.902758952f},
        {23.662142567f, 0.877251558f},
        {24.539394125f, 0.852030871f},
        {25.391424996f, 0.827168886f},
        {26.218593881f, 0.802726967f},
        {27.021320848f, 0.778756582f},
        {27.800077430f, 0.755300081f},
        {28.555377511f, 0.732391496f},
        {29.287769007f, 0.710057351f},
        {29.997826358f, 0.688317453f},
        {30.686143811f, 0.667185647f},
        {31.353329458f, 0.646670542f},
        {32.000000000f, 0.626776175f},
};

/// @addr{0x8022F80C}
f32 sqrt(f32 x) {
    return x > 0.0 ? frsqrt(x) * x : 0.0;
}

/// CREDIT: Hanachan
/// @addr{0x80085040}
f32 frsqrt(f32 x) {
    // frsqrte instruction
    f64 est = frsqrte(x);

    // Newton-Raphson refinement
    f32 tmp0 = static_cast<f32>(est * force25Bit(est));
    f32 tmp1 = static_cast<f32>(est * 0.5f);
    f32 tmp2 = static_cast<f32>(3.0f - static_cast<f64>(tmp0) * static_cast<f64>(x));
    return tmp1 * tmp2;
}

/// @addr{0x80085110}
f32 SinFIdx(f32 fidx) {
    f32 abs_fidx = fabs(fidx);

    while (abs_fidx >= 65536.0f) {
        abs_fidx -= 65536.0f;
    }

    u16 idx = static_cast<u16>(abs_fidx);
    f32 r = abs_fidx - static_cast<f32>(idx);
    idx &= 0xFF;
    f32 val = sSinCosTbl[idx].sinVal + r * sSinCosTbl[idx].sinDt;
    return fidx < 0.0f ? -val : val;
}

/// @addr{0x80085180}
f32 CosFIdx(f32 fidx) {
    f32 abs_fidx = fabs(fidx);

    while (abs_fidx >= 65536.0f) {
        abs_fidx -= 65536.0f;
    }

    u16 idx = static_cast<u16>(abs_fidx);
    f32 r = abs_fidx - static_cast<f32>(idx);
    idx &= 0xFF;

    return sSinCosTbl[idx].cosVal + r * sSinCosTbl[idx].cosDt;
}

f32 AtanFIdx_(f32 x) {
    x *= 32.0f;
    u16 idx = static_cast<u16>(x);
    f32 r = x - static_cast<f32>(idx);
    return sArcTanTbl[idx].atanVal + r * sArcTanTbl[idx].atanDt;
}

/// @addr{0x800853C0}
f32 Atan2FIdx(f32 y, f32 x) {
    if (x == 0.0f && y == 0.0f) {
        return 0.0f;
    }

    if (x >= 0.0f) {
        if (y >= 0.0f) {
            if (x >= y) {
                return 0.0f + AtanFIdx_(y / x);
            } else {
                return 64.0f - AtanFIdx_(x / y);
            }
        } else {
            if (x >= -y) {
                return 0.0f - AtanFIdx_(-y / x);
            } else {
                return -64.0f + AtanFIdx_(x / -y);
            }
        }
    } else {
        if (y >= 0.0f) {
            if (-x >= y) {
                return 128.0f - AtanFIdx_(y / -x);
            } else {
                return 64.0f + AtanFIdx_(-x / y);
            }
        } else {
            if (-x >= -y) {
                return -128.0f + AtanFIdx_(-y / -x);
            } else {
                return -64.0f - AtanFIdx_(-x / -y);
            }
        }
    }
}

/// Takes in radians
/// @addr{0x8022F860}
f32 sin(f32 x) {
    return SinFIdx(x * RAD2FIDX);
}

/// Takes in radians
/// @addr{0x8022F86C}
f32 cos(f32 x) {
    return CosFIdx(x * RAD2FIDX);
}

/// @addr{0x8022F8C0}
f32 acos(f32 x) {
    return ::acosl(x);
}

/// @addr{0x8022F8E4}
f32 atan2(f32 y, f32 x) {
    return Atan2FIdx(y, x) * FIDX2RAD;
}

f32 abs(f32 x) {
    return std::abs(x);
}

/// @brief Fused multiply-add operation.
/// @details We cannot use std::fma due to the Wii computing at 64-bit precision.
f32 fma(f32 x, f32 y, f32 z) {
    return static_cast<f32>(
            static_cast<f64>(x) * force25Bit(static_cast<f64>(y)) + static_cast<f64>(z));
}

/// @brief This is used to mimic the Wii's floating-point unit.
/// @details This handles the edgecase where double-precision floating-point numbers are passed into
/// single-precision floating-point operands in assembly.
f64 force25Bit(f64 x) {
    u64 bits = std::bit_cast<u64>(x);
    bits = (bits & 0xfffffffff8000000ULL) + (bits & 0x8000000);
    return std::bit_cast<f64>(bits);
}

} // namespace EGG::Mathf
